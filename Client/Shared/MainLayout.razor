@using System.Net.Http.Headers
@using Proj_APBD.Shared.Models.DTOs
@using Proj_APBD.Client.Models
@using Syncfusion.Blazor.Spinner
@inherits LayoutComponentBase
@inject IJSRuntime Js
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject UserData UserData

<div>
    @if (LoggedIn)
    {
        <Nav @ref="@Navigation"/>

        <main>
            <article class="">
                @Body
            </article>
        </main>
    }
    else
    {
        <SfSpinner Size="40" Label="Logging in" Type="SpinnerType.Tailwind" Visible="true"/>
    }
    
</div>

@code{

    private Nav Navigation { get; set; }

    private bool LoggedIn { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UserData.NavLock = true;
        var token = await Js.InvokeAsync<string>("localStorage.getItem", "jwt");
        if (token == "")
        {
            LoggedIn = true;
            NavigationManager.NavigateTo("/login");
            return;
        }
        var message = new HttpRequestMessage(HttpMethod.Get, "api/Accounts/data");
        message.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
        var response = await HttpClient.SendAsync(message);
        if (!response.IsSuccessStatusCode)
        {
            LoggedIn = true;
            NavigationManager.NavigateTo("/login");
            return;
        }
        var claims = await response.Content.ReadFromJsonAsync<List<ClaimDTO>>();

        UserData.Token = token;
        UserData.Id = claims!.First(c => c.Type == "UserId").Value;
        UserData.Username = claims!.First(c => c.Type == "Username").Value;
        UserData.Role = claims!.First(c => c.Type == "Role").Value;
        LoggedIn = true;
        StateHasChanged();
        Console.WriteLine(LoggedIn);
        UserData.NavLock = false;
        Navigation.Refresh();
    }

}