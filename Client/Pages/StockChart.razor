@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Buttons
@inject NavigationManager NavigationManager
@using System.Net.Http.Json
@using Proj_APBD.Client.Models
@using Proj_APBD.Server.Models
@using Proj_APBD.Server.Models.DTOs
@using System.Net.Http.Headers
@inject HttpClient HttpClient
@inject UserData UserData

<div class="@loadClass"></div>
<div class="@loadDiv">
    <SfStockChart Title="@Ticker" Theme="@theme">
        <StockChartEvents OnLoaded="@ChartLoaded"></StockChartEvents>
        <StockChartPrimaryXAxis>
            <StockChartAxisMajorGridLines Width="0"></StockChartAxisMajorGridLines>
            <StockChartAxisCrosshairTooltip Enable="true"></StockChartAxisCrosshairTooltip>
        </StockChartPrimaryXAxis>
        <StockChartPrimaryYAxis>
            <StockChartAxisLineStyle Width="0"></StockChartAxisLineStyle>
            <StockChartAxisMajorTickLines Width="0"></StockChartAxisMajorTickLines>
        </StockChartPrimaryYAxis>
        <StockChartTooltipSettings Enable="true"></StockChartTooltipSettings>
        <StockChartCrosshairSettings Enable="true"></StockChartCrosshairSettings>
        <StockChartSeriesCollection>
            <StockChartSeries DataSource="@DataSource" Type="ChartSeriesType.Candle"></StockChartSeries>
        </StockChartSeriesCollection>
        <StockChartChartArea>
            <StockChartChartAreaBorder Width="0"></StockChartChartAreaBorder>
        </StockChartChartArea>
    </SfStockChart>
</div>
<div>
    <div>Watchlist</div>
    <SfSwitch @bind-Checked="@IsWatched" @onclick="@ManageWatchList"></SfSwitch>
</div>

<style>
        .stockchartloader {
            border: 6px solid #f3f3f3;
            border-top: 6px solid #7a0fff;
            width: 40px;
            height: 40px;
            position: absolute;
            top: 46%;
            left: 46%;
            border-radius: 50%;
            -webkit-animation: loader 2s linear infinite;
            animation: loader 2s linear infinite;
        }
        .stockchartdiv {
            visibility: hidden;
        }
    </style>

@code {
    private bool IsWatched { get; set; }

    [Parameter]
    public string Ticker { get; set; }

    [Parameter]
    public List<StockChartData> DataSource { get; set; }

    Theme theme = Theme.Bootstrap4;

    string loadClass = "stockchartloader";
    string loadDiv = "stockchartdiv";

    protected override async Task OnInitializedAsync()
    {
        var message = new HttpRequestMessage(HttpMethod.Get, $"api/Stocks/watch/{Ticker}");
        message.Headers.Authorization = new AuthenticationHeaderValue("Bearer", UserData.Token);
        var response = await HttpClient.SendAsync(message);
        IsWatched = await response.Content.ReadFromJsonAsync<bool>();
    }

    void ChartLoaded(StockChartEventArgs args)
    {
        loadClass = "";
        loadDiv = "";
        StateHasChanged();
    }


    private async Task ManageWatchList()
    {
        var message = new HttpRequestMessage(!IsWatched ? HttpMethod.Post : HttpMethod.Delete, $"api/Stocks/watch/{Ticker}");
        message.Headers.Authorization = new AuthenticationHeaderValue("Bearer", UserData.Token);
        var response = await HttpClient.SendAsync(message);
        Console.WriteLine(response.StatusCode);
        if (!response.IsSuccessStatusCode)
        {
            IsWatched = !IsWatched;
        }
    }

}